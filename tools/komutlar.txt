>>>>>>>>>>>>>>>>>>>BUFFER<<<<<<<<<<<<<<<<<<

MSBF

def serialize(self):
        size = 256 * int(round(math.ceil(len(self.operations) / 256.0)))
        buf = bytearray(([0x02, 0x80] + [0] * 10) * size)  # Create buffer full of NOP
        i = 0
        for op in self.operations:
            buf[i:i + 12] = op.serialize()
            i += 12
        return buf




Command list<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

        # Write buffer.
        size = 256 * int(round(math.ceil(len(self.operations) / 256.0)))
        buf = bytearray(([0x02, 0x80] + [0] * 10) * size)  # Create buffer full of NOP
        i = 0
        for op in self.operations:
            buf[i : i + 12] = op.serialize()
            i += 12
        return buf

    def packet_generator(self):
        """
        Performs final operations and generates packets on the fly.
        :return:
        """
        last_xy = self._start_x, self._start_y

        # Write buffer.
        buf = bytearray([0] * 0xC00)  # Create a packet.
        eol = bytes([0x02, 0x80] + [0] * 10)  # End of Line Command
        i = 0
        for op in self.operations:
            if op.has_d():
                nx, ny = op.get_xy()
                x, y = last_xy
                op.set_d(int(((nx - x) ** 2 + (ny - y) ** 2) ** 0.5))

            if op.has_xy():
                last_xy = op.get_xy()
            buf[i : i + 12] = op.serialize()
            i += 12
            if i >= 0xC00:
                i = 0
                yield buf
        while i < 0xC00:
            buf[i: i + 12] = eol
            i += 12
        yield buf



balor<<<<<<<<<<<<<<<<<<<<<<<
args = parser.parse_args()

if args.file is None:
    data = sys.stdin.buffer.read()
else:
    data = open(args.file,'rb').read()


balor-aligner<<<<<<<<<<<<<<<<<<<<<<<
import sys
args = parser.parse_args()
if args.output is None:
    out_file = sys.stdout.buffer
else:
    out_file = open(args.output, 'wb')




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

LÄ°ST

><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Sender
<<<<<<<<<<<<<<<<<<<<

EXECUTE_LIST           = 0x0005
GET_LIST_STATUS        = 0x000A 
